services:
  db:
    image: postgres:17.5
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    image: internships-backend:latest
    command: >
      /bin/bash -c "
      alembic upgrade head &&
      uvicorn fastapi_app.app:app_ --host 0.0.0.0 --port 8000
      "
    restart: always
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./alembic.ini:/app/alembic.ini
      - ./migrations:/app/migrations
      - ./certs:/app/certs

  worker:
    container_name: worker
    image: internships-backend:latest
    command: >
      /bin/bash -c "
      sleep 5 &&
      taskiq worker fastapi_app.configs:broker --no-configure-logging --fs-discover --tasks-pattern "**/tasks"
      "
    depends_on:
      rabbitmq:
        condition: service_started
    env_file:
      - .env
    volumes:
      - ./certs:/app/certs

  maildev:
    image: maildev/maildev
    container_name: maildev
    environment:
      - TZ=Europe/Moscow
      - MAILDEV_WEB_PORT=1080
      - MAILDEV_SMTP_PORT=1025
    ports:
      - "8080:1080"
      - "1025:1025"

volumes:
  postgres_data:
  rabbitmq-data:
